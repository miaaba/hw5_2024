/* Step 1
Animate the logo with keyframes. It should start at a width of 25px and grow to 475px.  It should also start with an opacity of 0 and end with an opacity of 1. The animation should take 5 seconds and only happen when the page is loaded. **You can complete this step later in the process - it won’t affect the larger views.

This code creates the animation of the logo when the page is loaded. It grows from 25px to 475px and starts with an opacity of 0 and ends on an opacity of 1. The animation takes 5 sections. */

@keyframes logo{
    from{
        width: 25px;
        opacity: 0;
    }
    to{
        width: 475px;
        opacity: 1;
    }
}

#logo{
    animation: logo 5s;
}

/* Step 2
Edit the body element to use the Poppins font (using Google fonts) with serif as a backup.  It should also use the image “concrete_seamless.png” as a background-image with a backup color of #f1f1f1.

The font "Poppins" comes from Google Fonts and is imported on line 9 of the HTML file. Should that font not load, "sefif" is the backup option. In addtion, the body should have a background image using the "concrete_seamless.png" file. This file is not located in the CSS folder, but rather the images folder. The backup background color should be #f1f1f1. */

body{
    font-family:'Poppins',serif;
    background-image: url('../images/concrete_seamless.png');
    background-color: #f1f1f1;
}

/* Step 3
Edit the css for the header tag (all instances) to use flex to match our example.

Edits the default header so that it is displayed using flex and is displayed in a vertical fashion.*/

header{
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Step 4
Edit the css for the nav_links class to use flex to match our example. Do not modify the list items or the links - modify the nav_links class to use flex.

Displays the nav_links class, which includes links to different parts of the page, using flex.*/

.nav_links{
    display: flex;
    flex-direction: column;
}

/* Step 5
Style the links so that they have the same color even after they have been visited.

Styles the links so that visted links have the same color as unvisted links.*/

a:link, a:visited{
    color: #0000ff;
}

/* Step 6
Identify the proper selector to style ONLY those header elements that are direct children of a card class.  The required styling is the following:
background: #288088, solid 2px border using #45ADAD, 20px of padding on the top and the bottom, 50px border-radius on the top left and right corners.

Applies styling to only the header elements that are the direct children of the card class. This sytling does not apply to the header element that contains the nav elements.*/

.card > header{
    background: #288088;
    border: solid 2px #45ADAD;
    padding: 20px 0;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
}

/* Step 7 & 8
Edit the css for the card class to match our example. Achieve this by using a flex-property to specify an initial “size” of 450px.  You need to think about this from a “flex” perspective and realize that flex-direction will affect the size of the elements.  You can see that in the mobile view they all have the same width.

Edit the css for the pricing class to match our example. You should use flex and the cards should be centered both horizontally and vertically.

Displays the card and pricing classes using flex and makes sure they are centered both horizontally and vertically. Also ensures that the width of the cards remains the same. */

.card{
    display: flex;
    flex-direction: column;
    align-items: stretch;
    width: 450px;
    border-top-left-radius: 50px;
    border-top-right-radius: 50px;
}

.pricing{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* Step 9
Style the images in the gallery class. These elements will have a solid 10px border with a color of #50C7C7, 10px margin on all four sides and a width of 300px.

Styles the the images in the gallery class with a border and ensures that all images have a margin of 10px and a width 300px.*/

.gallery img{
    border: solid 10px #50C7C7;
    margin: 10px;
    width: 300px;
}

/* Step 10
Edit the css for the gallery class to use flex to match our example. (You may want to look at the screen shots from 1200px and 1500px as well -  the changes are not from media queries, but from the use of flex.)

Displays the gallery class using flex and makes sure that the images display correctly as the screen sizes change.*/

.gallery{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

/* The following specifications are for when the screen-size is greater than 900px */

@media only screen and (min-width: 900px){

    /* Step 11
    Edit the css for the header tag (all instances) and the nav_links class to match our example using flex-properties. The logo should be as far to the left as possible and the links as far to the right as possible. Use flex properties, NOT position properties.

    Displays the header and nav_links class in flex. Makes the logo as far left as possible and the links all the way to the right.*/

    header{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .nav_links{
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
    }

    /* Step 12
    Edit the css for the pricing and card classes to match our example. Part of achieving this is by using a flex-property to specify a “size” of 275px. Notice that the elements do not have the same height, but do have the same width. 

    Displays the pricing and card classes using flex.Ensures that each elements has the same width. */

    .pricing{
        display: flex;
        flex-direction: row;
        justify-content: center;
    }

    .card{
        display: flex;
        flex-direction: column;
        flex: none;
        width: 275px;
    }

    /* Step 13
    Modify the first header (the one not inside main) so that it remains visible at the top of the screen even as we scroll down. Make sure that it is always visible. You can see an example of this in the video and in the screenshot at 1200px when scrolled. This is a challenge problem. You should not give or receive help when completing it.

    Changes the first header to a fixed position so that when scrolling, it remains at the top. Also enures it stays at the top and the header spans across the whole screen. The padding on main makes sure that the <h1> is not lost under the header. */

    body > header{
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1;
    }

    main {
        padding-top: 100px;
    }
}

/* The following specifications are for when the user prefers reduced motion.   */

/* Step 14
The logo should appear but not be animated if prefers-reduced-motion is selected in the accessibility preferences.

Turns of the logo animation when the user has reduced motion turned on.*/

@media (prefers-reduced-motion: reduce){
    #logo{
        animation: none;
    }
}

/* The following specifications are for when the page is printed in portrait mode. */

@media print and (orientation: portrait){

    /* Step 15
    Change the font on your body to Arial with a backup value of Helvetica

    Changes the type face from Poppins to Arial, with Helvetica as a backup, in print view. */

    body{
        font-family: Arial, Helvetica;
    }

    /* Step 16
    The background image should be removed.

    Removes the background image in print view*/

    body{
        background-image: none;
    }

    /* Step 17
    Edit the nav/nav_links elements so that they are spaced according to the image above.

    Changes the nav and nav_links class in print view so that the logo sits on top of the nav links and the links are centered and displayed horizontally.*/

    nav{
        display: flex;
        justify-content: space-between;
    }

    .nav_links{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    /* Step 18
    Edit the pricing class so that the elements align along the bottom.  As long as it aligns along the bottom we don't care if the cards aren't the same height.

    Aligns the elements of the pricing class along the bottom in print view.*/

    .pricing{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: flex-end;
    }

    /* Step 19
    The card elements should have a solid border 2px of #45ADDD and use flex-basis of 325px.

    Adds a border and flex-basis of 325px to the card class in print view.*/

    .card{
        flex-basis: 325px;
        border: solid 2px #45ADDD;
    }

    /* Step 20
    No part of the gallery should be visible.

    Changes the display of the gallery class to "none" in print view.*/

    .gallery, #gallery{
        display: none;
    }

    /* Step 21
    Without using list-style-type add the thumbs up entity as shown in the cards. This is a challenge problem. You should not give or receive help when completing it.**For some people the thumbs up is not printing as yellow. That is fine.

    Selects on the <li> items in within the card class in the pricing class. Specifically, this selects for the second list item only. This selection is made so that a thumbs-up emoji appears at the end of the sentence.*/

    .pricing .card li:nth-child(2)::after{
        content: "\1F44D";
        font-size: 1em;
    }
}

